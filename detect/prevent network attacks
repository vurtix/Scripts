import scapy.all as scapy

def sniff(interface):
    # Set the Scapy sniffer to capture packets on the specified interface
    scapy.sniff(iface=interface, store=False, prn=process_packet)

def process_packet(packet):
    # Check the packet for potential threats
    if packet.haslayer(scapy.DNSRR):
        # Check for DNS spoofing attacks
        qname = packet[scapy.DNSQR].qname
        if "www.example.com" in qname:
            print("[+] Possible DNS Spoofing Attack Detected:")
            print(" - Target Domain: " + qname)
    elif packet.haslayer(scapy.TCP):
        # Check for TCP SYN flood attacks
        if packet[scapy.TCP].flags == 0x02:
            print("[+] Possible TCP SYN Flood Attack Detected:")
            print(" - Source IP: " + packet[scapy.IP].src)
            print(" - Destination IP: " + packet[scapy.IP].dst)
    elif packet.haslayer(scapy.Raw):
        # Check for malicious payloads in network traffic
        load = packet[scapy.Raw].load
        keywords = ["password", "login", "username", "secret"]
        for keyword in keywords:
            if keyword in load:
                print("[+] Possible Malicious Payload Detected:")
                print(" - Payload: " + load)

# Start sniffing network traffic on the specified interface
sniff("eth0")
